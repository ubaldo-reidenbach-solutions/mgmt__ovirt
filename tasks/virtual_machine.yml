---

- name: clone vm from template
  ovirt.ovirt.ovirt_vm:
    auth: "{{ ovirt_token }}"
    name: "{{ inventory_hostname }}"
    template: "{{ ovirt_template }}"
    cluster: "{{ ovirt_cluster }}"
    cpu_cores: "{{ sys_core }}"
    memory: "{{ sys_ram }}"
    high_availability: "{{ sys_ha }}"
    clone: true
    state: present
    timeout: 600
  delegate_to: localhost
  when: ovirt_task == "clone_template"

- name: configure vm with cloud init
  ovirt.ovirt.ovirt_vm:
    auth: "{{ ovirt_token }}"
    name: "{{ inventory_hostname }}"
    state: running
    cloud_init:
      host_name: "{{ inventory_hostname }}"
      nic_boot_protocol: "{{ net_proto }}"
      nic_ip_address: "{{ ansible_host }}"
      nic_netmask: "{{ net_mask }}"
      nic_gateway: "{{ net_gw }}"
      nic_name: "{{ net_dev }}"
      dns_servers: "{{ net_dns }}"
      user_name: "{{ sys_user }}"
      root_password: "{{ sys_pass }}"
      regenerate_ssh_keys: true
  register: startup_result
  until: startup_result is not failed
  retries: 3
  delay: 10
  delegate_to: localhost
  when: ovirt_task == "initialize_vm"

# valid states are:
# absent
# exported
# next_run
# present
# reboot
# registered
# reset
# running
# stopped
# suspended
- name: "set ovirt vm state to {{ ovirt_vm_state }}"
  ovirt.ovirt.ovirt_vm:
    auth: "{{ ovirt_token }}"
    name: "{{ inventory_hostname }}"
    state: "{{ ovirt_vm_state }}"
  delegate_to: localhost
  when: ovirt_task == "set_vm_state"

...
